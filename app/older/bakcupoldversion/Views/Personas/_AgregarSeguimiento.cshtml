@model ICC.Mincloud.Modelo.Entities.SeguimientosPersona
@using ICC.Mincloud.Modelo.Entities
@using Kendo.Mvc.UI
@using ICC.Mincloud.Modelo.Util
@Html.HiddenFor(model => model.TempId)
<div class="container col-md-12">

    <div class="col-md-12">
        @Html.LabelFor(model => model.SeguimientoId, htmlAttributes: new { @class = "control-label" })
        <div class="form-group">
            @(Html.Kendo().DropDownList()
                      .Name("SeguimientoId")
                      .HtmlAttributes(new { @style = "width:100%;" })
                      .OptionLabel("Seleccione un seguimiento...")
                      .DataTextField("Nombre")
                      .DataValueField("SeguimientoId")
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("GetSeguimientos", "Seguimientos");
                          });
                      })
            )
            @Html.ValidationMessageFor(model => model.SeguimientoId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-sm-12">
        @Html.LabelFor(model => model.EncargadoId, htmlAttributes: new { @class = "control-label" })
        <div class="form-group">
            @(Html.Kendo().DropDownList()
                      .Name("EncargadoId")
                      .HtmlAttributes(new { @style = "width:100%;" })
                      .OptionLabel("Seleccione un encargado...")
                      .DataTextField("NombreCompleto")
                      .DataValueField("PersonaId")
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("GetLideres", "Personas");
                          });
                      })
            )
            @Html.ValidationMessageFor(model => model.EncargadoId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-sm-12">
        @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label" })
        <div class="form-group">
            @*@Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control" } })*@
            @(Html.Kendo().DropDownList()
                      .Name("Estado")
                      .HtmlAttributes(new { style = "width: 100%" })
                      .BindTo(Enum.GetNames(typeof(EstadosSeguimientos)).ToList())
            )
            @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-sm-12">
        @Html.LabelFor(model => model.FechaSeguimiento, htmlAttributes: new { @class = "control-label" })
        <div class="form-group">
            @Html.EditorFor(model => model.FechaSeguimiento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FechaSeguimiento, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="col-sm-12">
        @Html.LabelFor(model => model.Observaciones, htmlAttributes: new { @class = "control-label" })
        <div class="form-group">
            @Html.EditorFor(model => model.Observaciones, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Observaciones, "", new { @class = "text-danger" })
        </div>
    </div>


</div>
