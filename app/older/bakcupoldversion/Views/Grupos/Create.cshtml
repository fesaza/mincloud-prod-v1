@using ICC.Mincloud.Modelo.Util
@using ICC.Mincloud.Web.Util
@using Kendo.Mvc.UI

@model ICC.Mincloud.Modelo.Entities.Grupo

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Grupo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MateriaId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MateriaId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MateriaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PeriodoId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PeriodoId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PeriodoId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TutorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TutorId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TutorId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DropDownList()
                      .Name("Dia")
                      .HtmlAttributes(new { @style = "width:100%;height:28px" })
                      .BindTo(Enum.GetNames(typeof(DiasSemana)).ToList())
                )
                @Html.ValidationMessageFor(model => model.Dia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HoraInicio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().TimePicker()
        .Name("HoraInicio").Min("6:00 AM")
          .Max("11:00 PM")
        .HtmlAttributes(new { style = "width: 100%" })
                )
                @Html.ValidationMessageFor(model => model.HoraInicio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HoraFin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().TimePicker()
        .Name("HoraFin").Min("6:00 AM")
          .Max("11:00 PM")
        .HtmlAttributes(new { style = "width: 100%" })
                )
                @Html.ValidationMessageFor(model => model.HoraFin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dia2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DropDownList()
                      .Name("Dia2")
                      .HtmlAttributes(new { @style = "width:100%;height:28px" })
                      .BindTo(Enum.GetNames(typeof(DiasSemana)).ToList())
                )

                @Html.ValidationMessageFor(model => model.Dia2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HoraInicio2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().TimePicker()
        .Name("HoraInicio2").Min("6:00 AM")
          .Max("11:00 PM")
        .HtmlAttributes(new { style = "width: 100%" })
                )
                @Html.ValidationMessageFor(model => model.HoraInicio2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HoraFin2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().TimePicker()
        .Name("HoraFin2").Min("6:00 AM")
          .Max("11:00 PM")
        .HtmlAttributes(new { style = "width: 100%" })
                )
                @Html.ValidationMessageFor(model => model.HoraFin2, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-success" />
                @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>

}

